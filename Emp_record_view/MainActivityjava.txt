package com.pooja.employeedatabase;

import android.content.Intent;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import com.google.android.gms.appindexing.Action;
import com.google.android.gms.appindexing.AppIndex;
import com.google.android.gms.appindexing.Thing;
import com.google.android.gms.common.api.GoogleApiClient;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;

import static android.R.attr.bitmap;

public class MainActivity extends AppCompatActivity {

    int clicked=0;
    EditText name, age;
    ImageView imageView;
    Button select, add, view;
    Dbhelper dbhelper;
    //private static final int PICK_IMAGE = 100;
    //int image;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        dbhelper = new Dbhelper(this);
        name = (EditText) findViewById(R.id.Enter_name_main);
        age = (EditText) findViewById(R.id.Enter_age_main);
        imageView = (ImageView) findViewById(R.id.imageView);


       select = (Button) findViewById(R.id.button_selectImage);
        select.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //opengallery();
                if(clicked==0)
                {
                    imageView.setImageResource(R.drawable.emp3);
                    Toast.makeText(MainActivity.this,"clicked="+clicked,Toast.LENGTH_LONG).show();
                    clicked=1;
                }
                else
                {
                    imageView.setImageResource(R.drawable.emp2);
                    Toast.makeText(MainActivity.this,"clicked="+clicked,Toast.LENGTH_LONG).show();
                    clicked=0;
                }

            }

        });

        add = (Button) findViewById(R.id.button_addtodb);
        add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                long result = dbhelper.Insertintodb(name.getText().toString().trim(),
                        age.getText().toString().trim(),
                        converttobyte(imageView));
                if (result == -1) {
                    Toast.makeText(MainActivity.this, "Record wass not inserted due to some problem", Toast.LENGTH_LONG).show();
                } else {
                    Toast.makeText(MainActivity.this, "Record was inserted successfully", Toast.LENGTH_LONG).show();
                    name.setText("");
                    age.setText("");
                    imageView.setImageResource(R.mipmap.ic_launcher);
                }
            }
        });

        view = (Button) findViewById(R.id.button_view_details);
        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(MainActivity.this, ViewEmployee.class);
                startActivity(intent);
            }
        });

    }
/*Code to open gallery to select the images
    public void opengallery() {
        Intent selectImage = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);
        startActivityForResult(selectImage, PICK_IMAGE);
    }

    @Override
    protected void onActivityResult(int requestcode, int resultcode, Intent data) {
        super.onActivityResult(requestcode, resultcode, data);
        if (resultcode == RESULT_OK && requestcode == PICK_IMAGE) {
            image = data.getData();

            try {
                InputStream inputStream=getContentResolver().openInputStream(image);
                Bitmap bitmap= BitmapFactory.decodeStream(inputStream);
                imageView.setImageBitmap(bitmap);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }
    }*/

    public byte[] converttobyte(ImageView imageView) {
        Bitmap bitmap = ((BitmapDrawable) imageView.getDrawable()).getBitmap();
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
        bitmap.compress(Bitmap.CompressFormat.JPEG, 70, stream);
        byte[] bytearray = stream.toByteArray();
        return bytearray;
    }


}